import re
import os
import json

BASE_DIR = os.path.dirname(os.path.abspath(__file__))

with open(os.path.join(BASE_DIR, 'QA.json'), 'r', encoding='utf-8') as f:
    qa_data = json.load(f)

intro_message_en = (
    "ЁЯЩП Dhan Nirankar Ji! ЁЯЩП\n"
    "Welcome. I am a spiritual assistant here to share the teachings of the Sant Nirankari Mission.\n"
    "The Mission emphasizes God-realisation and living with love, peace, and unity.\n\n"
    "How may I assist you today?"
)

intro_message_hi = (
    "ЁЯЩП рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП\n"
    "рд╕реНрд╡рд╛рдЧрдд рд╣реИред рдореИрдВ рд╕рдВрдд рдирд┐рд░рдВрдХрд╛рд░реА рдорд┐рд╢рди рдХреА рд╢рд┐рдХреНрд╖рд╛рдУрдВ рдХреЛ рд╕рд╛рдЭрд╛ рдХрд░рдиреЗ рд╡рд╛рд▓рд╛ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╕рд╣рд╛рдпрдХ рд╣реВрдБред\n"
    "рдорд┐рд╢рди рдИрд╢реНрд╡рд░ рдХреА рдЕрдиреБрднреВрддрд┐ рдФрд░ рдкреНрд░реЗрдо, рд╢рд╛рдВрддрд┐, рдПрдХрддрд╛ рдХреЗ рд╕рд╛рде рдЬреАрд╡рди рдмрд┐рддрд╛рдиреЗ рдкрд░ рдЬрд╝реЛрд░ рджреЗрддрд╛ рд╣реИред\n\n"
    "рдореИрдВ рдЖрдкрдХреА рдХрд┐рд╕ рдкреНрд░рдХрд╛рд░ рд╕рд╣рд╛рдпрддрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?"
)

farewell_message_en = (
    "ЁЯЩП Dhan Nirankar Ji! ЁЯЩП\n"
    "Thank you for this spiritual moment.\n"
    "May Nirankar bless you with peace, wisdom, and devotion.\n\n"
    "Remember, we are all one through the formless God. ЁЯЩП"
)

farewell_message_hi = (
    "ЁЯЩП рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП\n"
    "рдЗрд╕ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдХреНрд╖рдг рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред\n"
    "рдирд┐рд░рдВрдХрд╛рд░ рдЖрдкрдХреЛ рд╢рд╛рдВрддрд┐, рдЬреНрдЮрд╛рди рдФрд░ рднрдХреНрддрд┐ рд╕реЗ рдЖрд╢реАрд░реНрд╡рд╛рджрд┐рдд рдХрд░реЗрдВред\n\n"
    "рдпрд╛рдж рд░рдЦреЗрдВ, рд╣рдо рд╕рднреА рдирд┐рд░рд╛рдХрд╛рд░ рдИрд╢реНрд╡рд░ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдПрдХ рд╣реИрдВред ЁЯЩП"
)

# To remember if it's the user's first interaction
session_memory = {}

# Regex patterns for greeting and farewell detection (both English and Hindi)
GREETING_PATTERNS = [
    r"\bhello\b", r"\bhi\b", r"\bhey\b", r"\bgood\s(morning|afternoon|evening)\b",
    r"\bgreetings\b", r"\bwhat's up\b", r"\bhow are you\b",
    r"\bрдирдорд╕реНрддреЗ\b", r"\bрдирдорд╕реНрдХрд╛рд░\b", r"\bрд╕рдд рд╢реНрд░реА рдЕрдХрд╛рд▓\b", r"\bрдкреНрд░рдгрд╛рдо\b"
]

FAREWELL_PATTERNS = [
    r"\bbye\b", r"\bgoodbye\b", r"\bsee you\b", r"\bexit\b",
    r"\bthank(s| you)\b", r"\bfarewell\b", r"\btake care\b",
    r"\bрдЕрд▓рд╡рд┐рджрд╛\b", r"\bрдлрд┐рд░ рдорд┐рд▓реЗрдВрдЧреЗ\b", r"\bрдзрдиреНрдпрд╡рд╛рдж\b", r"\bрд╢реБрднрдХрд╛рдордирд╛рдПрдБ\b"
]

# Keywords to detect language preference in user input
HINDI_RESPONSE_KEYWORDS = [
    r"\breply\s+in\s+hindi\b",
    r"\banswer\s+in\s+hindi\b",
    r"рд╣рд┐рдВрджреА\s+рдореЗрдВ\s+рдЬрд╡рд╛рдм",
    r"рд╣рд┐рдВрджреА\s+рдореЗрдВ\s+рдЙрддреНрддрд░",
    r"рд╣рд┐рдВрджреА\s+рдореЗрдВ\s+рдЬрд╡рд╛рдм\s+рджреЛ",
    r"please\s+respond\s+in\s+hindi"
]

ENGLISH_RESPONSE_KEYWORDS = [
    r"\breply\s+in\s+english\b",
    r"\banswer\s+in\s+english\b",
    r"english\s+рдореЗрдВ\s+рдЬрд╡рд╛рдм",
    r"english\s+рдореЗрдВ\s+рдЙрддреНрддрд░",
    r"english\s+рдореЗрдВ\s+рдЬрд╡рд╛рдм\s+рджреЛ",
    r"please\s+respond\s+in\s+english"
]

def contains_hindi(text):
    """Return True if text contains any Hindi character (Unicode range)."""
    return bool(re.search('[\u0900-\u097F]', text))

def match_patterns(patterns, text):
    """Return True if any pattern matches the text."""
    for pattern in patterns:
        if re.search(pattern, text, re.IGNORECASE):
            return True
    return False

def get_nirankari_response(user_input, user=None):
    user_input_clean = user_input.strip().lower()
    print(f"[INFO] User: {user}, Input: {user_input_clean}")

    # Detect input language
    is_hindi = contains_hindi(user_input)

    # Check language preference in input explicitly
    force_hindi_response = match_patterns(HINDI_RESPONSE_KEYWORDS, user_input_clean)
    force_english_response = match_patterns(ENGLISH_RESPONSE_KEYWORDS, user_input_clean)

    # Decide response language priority
    if force_hindi_response:
        response_in_hindi = True
    elif force_english_response:
        response_in_hindi = False
    else:
        response_in_hindi = is_hindi

    # Show intro only once per session/user
    if user and user not in session_memory:
        session_memory[user] = True
        return intro_message_hi if response_in_hindi else intro_message_en

    # Greeting detection
    if match_patterns(GREETING_PATTERNS, user_input_clean):
        return (
            "ЁЯЩП рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! рдореИрдВ рд╕рдВрдд рдирд┐рд░рдВрдХрд╛рд░реА рдорд┐рд╢рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХреИрд╕реЗ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?"
            if response_in_hindi else
            "ЁЯЩП Dhan Nirankar Ji! How can I assist you with the Sant Nirankari Mission today?"
        )

    # Farewell detection
    if match_patterns(FAREWELL_PATTERNS, user_input_clean):
        return farewell_message_hi if response_in_hindi else farewell_message_en

    # Iterate through QA pairs to find matching answer
    for qa_item in qa_data:
        # Check Hindi patterns if Hindi response
        if response_in_hindi:
            for pattern in qa_item.get("hi_patterns", []):
                if re.search(pattern, user_input, re.IGNORECASE):
                    return qa_item.get("hi_answer", "")
        else:
            # Check English patterns if English response
            for pattern in qa_item.get("en_patterns", []):
                if re.search(pattern, user_input_clean, re.IGNORECASE):
                    return qa_item.get("en_answer", "")

    # Default fallback response
    return (
        "рдореИрдВ рд╕рдВрдд рдирд┐рд░рдВрдХрд╛рд░реА рдорд┐рд╢рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЖрдкрдХреЗ рдкреНрд░рд╢реНрдиреЛрдВ рдореЗрдВ рд╕рд╣рд╛рдпрддрд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдБ рд╣реВрдБред\n"
        "рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ рдкреНрд░рд╢реНрди рдХреЛ рдкреБрдирдГ рд╡реНрдпрдХреНрдд рдХрд░реЗрдВ рдпрд╛ рдорд┐рд╢рди рдХреА рд╢рд┐рдХреНрд╖рд╛рдУрдВ рдпрд╛ рд╕рд┐рджреНрдзрд╛рдВрддреЛрдВ рд╕реЗ рд╕рдВрдмрдВрдзрд┐рдд рдХреБрдЫ рдкреВрдЫреЗрдВред\n\n"
        if response_in_hindi else
        "I'm here to assist with questions about the Sant Nirankari Mission.\n"
        "Could you please rephrase or ask something related to its teachings or principles?\n\n"
    )